name: Tests

on:
  pull_request:
    branches: [master]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
    env:
      PYTHON: ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade poetry
          poetry install
      - name: Lint with flake8
        run: |
          poetry run flake8 upnpavcontrol --statistics
      - name: Test with pytest
        run: |
          poetry run pytest --cov=./ --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          flags: backend
          env_vars: PYTHON
          fail_ci_if_error: true
  test-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 17.x
        uses: actions/setup-node@v1
        with:
          node-version: 17.x
      - name: Install dependencies
        run: yarn install --frozen-lockfile
        working-directory: ./frontend
      - name: Build frontend
        run: yarn build
        working-directory: ./frontend
      - name: Run tests
        run: yarn test --coverage --watchAll=false
        working-directory: ./frontend
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          flags: frontend
          fail_ci_if_error: true
          directory: ./frontend
